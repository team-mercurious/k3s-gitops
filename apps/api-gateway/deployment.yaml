apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: app
  labels:
    app: api-gateway
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
        version: v1.0.0
    spec:
      containers:
      - name: app
        image: sha-42ea07da79640c76e651eaaa8146c87eb8db5d9b # {"$imagepolicy": "flux-system:api-gateway:tag"}
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          protocol: TCP
        env:
        # App configuration - Using secrets instead of configmap
        envFrom:
        - secretRef:
            name: api-gateway-env
        # Database and Redis
        - name: MONGO_URI
          valueFrom:
            secretKeyRef:
              name: app-common-secrets
              key: MONGO_URI
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: app-common-secrets
              key: MONGODB_URI
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: app-common-secrets
              key: REDIS_URL
        # API Keys
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-common-secrets
              key: OPENAI_API_KEY
        - name: GOOGLE_PLACES_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-common-secrets
              key: GOOGLE_PLACES_API_KEY
        # OAuth secrets
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: gateway-oauth-secrets
              key: GOOGLE_CLIENT_ID
              optional: true
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: gateway-oauth-secrets
              key: GOOGLE_CLIENT_SECRET
              optional: true
        - name: OPENWEATHER_API_KEY
          valueFrom:
            secretKeyRef:
              name: gateway-oauth-secrets
              key: OPENWEATHER_API_KEY
              optional: true
        # Auth secret
        - name: BETTER_AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: gateway-auth-secret
              key: BETTER_AUTH_SECRET
              optional: true
        # Kafka configuration
        - name: KAFKA_BROKERS
          value: "my-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "my-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
        - name: KAFKA_BROKER
          value: "my-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
        - name: KAFKA_SASL_MECHANISM
          value: "scram-sha-512"
        - name: KAFKA_MECHANISM
          value: "scram-sha-512"
        - name: KAFKA_SECURITY_PROTOCOL
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: securityProtocol
        - name: KAFKA_SASL_USERNAME
          valueFrom:
            secretKeyRef:
              name: kafka-sasl
              key: username
        - name: KAFKA_SASL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kafka-sasl
              key: password
        - name: KAFKA_USERNAME
          valueFrom:
            secretKeyRef:
              name: kafka-sasl
              key: username
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kafka-sasl
              key: password
        - name: KAFKA_SASL_ENABLED
          value: "true"
        - name: KAFKA_SSL
          value: "false"
        - name: KAFKAJS_NO_PARTITIONER_WARNING
          value: "1"
        # Additional env vars from configmap
        - name: SECURITYPROTOCOL
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: securityProtocol
        - name: BROKERS
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: brokers
        - name: MECHANISM
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: mechanism
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: kafka-sasl
              key: username
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: kafka-sasl
              key: password
        # Health checks
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        # Resource limits
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      restartPolicy: Always
